{"version":3,"file":"static/js/440.4771a85e.chunk.js","mappings":"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","sources":["webpack://react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","components/services/genres-names.js","components/services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"details\":\"MovieDetailsPage_details__7aDRv\",\"go_back\":\"MovieDetailsPage_go_back__ByNCG\",\"go_back__icon\":\"MovieDetailsPage_go_back__icon__N783T\",\"image_wrapper\":\"MovieDetailsPage_image_wrapper__ibM0R\",\"image\":\"MovieDetailsPage_image__bfvR6\",\"title_wrapper\":\"MovieDetailsPage_title_wrapper__0mFQj\",\"title\":\"MovieDetailsPage_title__MDJ+L\",\"tagline\":\"MovieDetailsPage_tagline__10CJk\",\"info\":\"MovieDetailsPage_info__3IUJv\",\"info__item\":\"MovieDetailsPage_info__item__F8uVy\",\"info__value\":\"MovieDetailsPage_info__value__wlVgy\",\"genres\":\"MovieDetailsPage_genres__HV3uS\",\"overview\":\"MovieDetailsPage_overview__Q2W8b\",\"additional\":\"MovieDetailsPage_additional__BCHVj\",\"additional__button\":\"MovieDetailsPage_additional__button__P-DxX\",\"star\":\"MovieDetailsPage_star__GR5XZ\"};","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/movies-api';\nimport { genresNames } from '../services/genres-names';\nimport { Link } from 'react-router-dom';\nimport s from './MovieDetailsPage.module.css';\nimport sprite from '../images/icons.svg'\n\nexport default function MovieDetailsPage() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState('');\n    const [from, setFrom] = useState(null);\n    const [searchBack, setSearchBack] = useState('');\n\n    const navigate = useNavigate();\n    const { state } = useLocation();\n\n    const options = {  year: 'numeric', month: 'long', day: 'numeric' };\n    \n    // Setting path for Go Back button with search query fom movies page return \n    useEffect(() => {\n        if (state?.from) {\n            const { pathname, search } = state.from;\n            setFrom(pathname);\n            setSearchBack(search);\n        }\n    },[state?.from])\n\n    useEffect(() => {\n        fetchMovieDetails(movieId)\n            .then(data => {\n                normalizedData(data);\n                setMovie(data);\n                console.log(data);\n            })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId])\n\n    // Normalizing genres in data\n    function normalizedData(results) {\n        createGenres(genresNames, results.genres);\n        \n        return results;\n    }\n\n    function createGenres(arrayID, genresID) {\n        let arrayOfGenres = [];\n\n        return arrayID.map(element => {\n            if (genresID.includes(element.id)) {\n                arrayOfGenres.push(element.name);\n            }\n\n            return arrayOfGenres;\n        });\n    }\n\n    function goBackHandle() {\n        if (from === null) {\n            //Go back functionality for first load of page from address bar\n            navigate('/react-hw-05-movies', { replace: true });\n            return;\n        }\n\n        else {\n            navigate(`${from}${searchBack}`);\n        }\n    }\n\n    function timeConvert(time) {\n        let duration = time;\n        let hours = duration / 60;\n        let roundedHours = Math.floor(hours);\n        let minutes = (hours - roundedHours) * 60;\n        let roundedMinutes = Math.round(minutes);\n        let hoursText = roundedHours === 1 ? `${roundedHours} hour ` : `${roundedHours} hours `;\n        let minutesText = roundedMinutes === 1 ? `${roundedMinutes} minute` : `${roundedMinutes} minutes`;\n\n        if (roundedHours === 0) {\n            hoursText = '';\n        }\n        if (roundedMinutes === 0) {\n            minutesText = '';\n        }\n\n        return hoursText + minutesText;\n    }\n\n    return (\n      <>\n        {movie && (\n          <div className={s.details}>\n            <div className={s.image_wrapper}>\n              {movie.poster_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.original_title}\n                  className={s.image}\n                />\n              ) : (\n                <img\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n                  alt={movie.original_title}\n                  className={s.image}\n                />\n              )}\n\n              <button onClick={goBackHandle} className={s.go_back}>\n                <svg\n                  className={s.go_back__icon}\n                  width=\"16\"\n                  height=\"16\"\n                  aria-label=\"logo\"\n                >\n                  <use href={`${sprite}#arrow-back`}></use>\n                </svg>\n              </button>\n            </div>\n\n            <div className={s.description}>\n              <div className={s.title_wrapper}>\n                <h2 className={s.title}>{movie.original_title}</h2>\n                {movie.tagline !== '' ? (\n                  // Checking for dot at the end of a string with tagline\n                  <p className={s.tagline}>\"{movie.tagline}\"</p>\n                ) : (\n                  ''\n                )}\n              </div>\n              <ul className={s.info}>\n                {movie.vote_average !== 0 ? (\n                  <li className={s.info__item}>\n                    User Score:{' '}\n                    <span className={s.info__value}>\n                      <span className={s.star}>\n                        <i className=\"fa fa-star-o\"></i>\n                      </span>\n                      &#160;{movie.vote_average}\n                    </span>\n                  </li>\n                ) : (\n                  <li className={s.info__item}>\n                    User Score:{' '}\n                    <span className={s.info__value}>\n                      <span className={s.star}>\n                        <i className=\"fa fa-star-o\"></i>\n                      </span>\n                      &#160;--\n                    </span>\n                  </li>\n                )}\n                {movie.release_date !== '' ? (\n                  <li className={s.info__item}>\n                    Release date:{' '}\n                    <span className={s.info__value}>\n                      {new Date(movie.release_date).toLocaleDateString(\n                        'en-US',\n                        options\n                      )}\n                    </span>\n                  </li>\n                ) : (\n                  <li className={s.info__item}>\n                    Release date: <span className={s.info__value}>--</span>\n                  </li>\n                )}\n                {movie.budget !== 0 ? (\n                  <li className={s.info__item}>\n                    Budget:{' '}\n                    <span className={s.info__value}>\n                      ${movie.budget.toLocaleString()}\n                    </span>\n                  </li>\n                ) : (\n                  ''\n                )}\n                {movie.revenue !== 0 ? (\n                  <li className={s.info__item}>\n                    Revenue:{' '}\n                    <span className={s.info__value}>\n                      ${movie.revenue.toLocaleString()}\n                    </span>\n                  </li>\n                ) : (\n                  ''\n                )}\n                {movie.runtime !== 0 ? (\n                  <li className={s.info__item}>\n                    Runtime:{' '}\n                    <span className={s.info__value}>\n                      {timeConvert(movie.runtime)}\n                    </span>\n                  </li>\n                ) : (\n                  ''\n                )}\n                <li className={s.info__item}>\n                  Genres:{' '}\n                  <ul className={s.genres}>\n                    {movie.genres.length > 0 ? (\n                      movie.genres.map(({ id, name }, index) => (\n                        <li className={s.genres__item} key={id}>\n                          {(index ? ', ' : '') + name}\n                        </li>\n                      ))\n                    ) : (\n                      <p className={s.genres__item}>Other</p>\n                    )}\n                  </ul>\n                </li>\n              </ul>\n\n              <p className={s.overview}>{movie.overview}</p>\n\n              <div className={s.additional}>\n                <Link\n                  to={`/react-hw-05-movies/movies/${movieId}/cast`}\n                  className={s.additional__button}\n                >\n                  Cast\n                </Link>\n                <Link\n                  to={`/react-hw-05-movies/movies/${movieId}/reviews`}\n                  className={s.additional__button}\n                >\n                  Reviews\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <Outlet />\n      </>\n    );\n}","export const genresNames = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=387a2500e741e87c896db50117c25d75'\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies(page=\"1\") {\n    const PATH_PARAMS = '/trending/movie/week';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${API_KEY}&page=${page}`)\n    //     .then(response => response.json())\n    \n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${API_KEY}&page=${page}`)\n}\n\nexport function fetchMovies(searchQuery, page = \"1\") {\n    const PATH_PARAMS = '/search/movie';\n    const searchParams = '&language=en-US&include_adult=false';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${API_KEY}&query=${searchQuery}&page=${page}${searchParams}`)\n    //     .then(response => response.json())\n    \n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${API_KEY}&query=${searchQuery}&page=${page}${searchParams}`)\n}\n\nexport function fetchMovieDetails(movie_id) {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}${API_KEY}${searchParams}`)\n    //     .then(response => response.json())\n    \n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}${API_KEY}${searchParams}`)\n}\n\nexport function fetchMovieCredits(movie_id) {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}/credits${API_KEY}${searchParams}`)\n    //     .then(response => response.json())\n    \n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}/credits${API_KEY}${searchParams}`)\n}\n\nexport function fetchMovieReviews(movie_id, page = \"1\") {\n    const PATH_PARAMS = '/movie/';\n    const searchParams = '&language=en-US';\n\n    // return fetch(`${BASE_URL}${PATH_PARAMS}${movie_id}/reviews${API_KEY}${searchParams}&page=${page}`)\n    //     .then(response => response.json())\n    \n    return fetchWithErrorHandling(`${BASE_URL}${PATH_PARAMS}${movie_id}/reviews${API_KEY}${searchParams}&page=${page}`)\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieDetailsPage","movieId","useParams","useState","movie","setMovie","from","setFrom","searchBack","setSearchBack","navigate","useNavigate","state","useLocation","useEffect","pathname","search","fetchMovieDetails","then","data","results","arrayID","genresID","arrayOfGenres","map","element","includes","id","push","name","createGenres","genresNames","genres","console","log","className","s","poster_path","src","alt","original_title","onClick","replace","width","height","href","sprite","tagline","vote_average","release_date","Date","toLocaleDateString","year","month","day","budget","toLocaleString","revenue","runtime","time","hours","roundedHours","Math","floor","minutes","roundedMinutes","round","hoursText","minutesText","timeConvert","length","index","overview","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","page","PATH_PARAMS","fetchMovies","searchQuery","searchParams","movie_id","fetchMovieCredits","fetchMovieReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}